version: '3.8'

services:
  proxy:
    image: nginxproxy/nginx-proxy
    profiles: [ proxy ]
    container_name: proxy
    ports: [ "80:80", "443:443" ]
    volumes:
      - proxy_conf.d:/etc/nginx/conf.d
      - proxy_vhost.d:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - ./proxy/certs:/etc/nginx/certs
      - ./proxy/htpasswd:/etc/nginx/htpasswd
      - ./proxy/conf.d/uploads.conf:/etc/nginx/conf.d/uploads.conf
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks: [ proxy ]
    restart: unless-stopped

  proxy-letsencrypt:
    image: nginxproxy/acme-companion
    profiles: [ proxy-letsencrypt ]
    container_name: proxy-letsencrypt
    volumes:
      - proxy_conf.d:/etc/nginx/conf.d
      - proxy_vhost.d:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - proxy_acme.sh:/etc/acme.sh
      - ./proxy/certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DEFAULT_EMAIL: ${LETSENCRYPT_DEFAULT_EMAIL:-admin@example.com}
      NGINX_PROXY_CONTAINER: proxy
    depends_on: [ proxy ]
    networks: [ proxy ]
    restart: always

  adminer:
    image: adminer
    profiles: [ adminer ]
    container_name: adminer
    volumes:
      - ./adminer/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      - VIRTUAL_HOST=${ADMINER_HOST:-adminer.localhost}
    networks: [ proxy, databases ]
    restart: unless-stopped

  postgresql:
    user: ${POSTGRES_CONTAINER_USER:-1000}:${POSTGRES_CONTAINER_USER:-1000}
    image: postgres:${POSTGRES_IMAGE_VERSION:-14}
    profiles: [ postgresql ]
    container_name: postgresql
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/data
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-rootpass}
    networks: [ databases ]
    restart: unless-stopped

  mysql:
    user: ${MYSQL_CONTAINER_USER:-1000}:${MYSQL_CONTAINER_USER:-1000}
    image: mysql:${MYSQL_IMAGE_VERSION:-8}
    profiles: [ mysql ]
    container_name: mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_USER=${MYSQL_USER:-root}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD:-rootpass}
    networks: [ databases ]
    restart: unless-stopped

  mailcatcher:
    image: schickling/mailcatcher
    profiles: [ mailcatcher ]
    container_name: mailcatcher
    environment:
      - VIRTUAL_HOST=${MAILCATCHER_HOST:-mailcatcher.localhost}
      - VIRTUAL_PORT=1080
    networks: [ proxy, tools ]

  webhook:
    image: almir/webhook
    profiles: [ webhook ]
    container_name: webhook
    command: -verbose -hooks=/etc/webhook/hooks.json -hotreload
    volumes:
      - ./webhook:/etc/webhook
    environment:
      - VIRTUAL_HOST=${WEBHOOK_HOST:-webhook.localhost}
      - LETSENCRYPT_HOST=${WEBHOOK_HOST:-webhook.localhost}
    networks: [ proxy ]
    restart: unless-stopped

volumes:
  proxy_conf.d:
  proxy_vhost.d:
  proxy_html:
  proxy_acme.sh:

networks:
  proxy:
    name: proxy
    external: true
  databases:
    name: databases
    external: true
  tools:
    name: tools
    external: true
