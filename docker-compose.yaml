version: '3.8'

services:
  proxy:
    image: nginxproxy/nginx-proxy
    profiles: [ proxy ]
    container_name: proxy
    ports: [ "80:80", "443:443" ]
    volumes:
      - proxy_conf.d:/etc/nginx/conf.d
      - proxy_vhost.d:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - ./proxy/certs:/etc/nginx/certs
      - ./proxy/htpasswd:/etc/nginx/htpasswd
      - ./proxy/conf.d/uploads.conf:/etc/nginx/conf.d/uploads.conf
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks: [ proxy ]
    restart: unless-stopped

  proxy-letsencrypt:
    image: nginxproxy/acme-companion
    profiles: [ proxy-letsencrypt ]
    container_name: proxy-letsencrypt
    volumes:
      - proxy_conf.d:/etc/nginx/conf.d
      - proxy_vhost.d:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - proxy_acme.sh:/etc/acme.sh
      - ./proxy/certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DEFAULT_EMAIL: ${LETSENCRYPT_DEFAULT_EMAIL}
      NGINX_PROXY_CONTAINER: proxy
    depends_on: [ proxy ]
    networks: [ proxy ]
    restart: always

  adminer:
    image: adminer
    profiles: [ adminer ]
    container_name: adminer
    volumes:
      - ./adminer/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      - VIRTUAL_HOST=${ADMINER_HOST}
    networks: [ proxy, databases ]
    restart: unless-stopped

  webhook:
    image: almir/webhook
    profiles: [ webhook ]
    container_name: webhook
    command: -verbose -hooks=/etc/webhook/hooks.json -hotreload
    volumes:
      - ./webhook:/etc/webhook
    environment:
      - VIRTUAL_HOST=${WEBHOOK_HOST}
    networks: [ proxy ]
    restart: unless-stopped

volumes:
  proxy_conf.d:
  proxy_vhost.d:
  proxy_html:
  proxy_acme.sh:

networks:
  proxy:
    name: proxy
    external: true
  databases:
    name: databases
    external: true
